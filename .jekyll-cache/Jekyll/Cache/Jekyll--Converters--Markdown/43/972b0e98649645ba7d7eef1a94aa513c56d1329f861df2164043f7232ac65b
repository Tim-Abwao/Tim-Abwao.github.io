I"›<p><a href="https://rasa.com/">Rasa</a> is an <a href="https://opensource.com/resources/what-open-source">open source</a> Python package with easy-to-use tools for building intelligent text and voice based chatbots. It features several <em>machine learning</em>, <em>natural language processing</em> and <em>natural language understanding</em> tools to produce smart, life-like chatbots.</p>

<h3 id="installation">Installation</h3>
<p>Please check out the <a href="https://rasa.com/docs/rasa/user-guide/installation/#installation-guide">step-by-step installation guide</a> for platform-specific instructions. This <a href="https://rasa.com/docs/getting-started/">getting started guide</a> installs Rasa and creates a basic chatbot (Rasa project) that you can try out right away.</p>

<h2 id="getting-started">Getting Started</h2>
<p>The <a href="https://rasa.com/docs/rasa/user-guide/rasa-tutorial/">Rasa Tutorial</a> is the best way to get acquainted with how Rasa works. It defines the fundamental files required to build chatbots, and their varied formats.</p>

<h2 id="anatomy-of-the-chatbot">Anatomy of the Chatbot</h2>
<ul>
  <li><strong>â€˜The brainsâ€™</strong>: The chatbot is â€˜taughtâ€™ using training data in the <strong>data</strong> directory/folder. It understands a userâ€™s input by â€˜learningâ€™ the various <em>intents</em> and <em>entities</em> in the <strong>nlu.md</strong> file (Please see <a href="https://rasa.com/docs/rasa/nlu/training-data-format/">Training Data Format</a>).</li>
</ul>

<p>You can add as many <em>intents</em> as you wish to customise it (e.g. for small talk, customer service, ticket-booking, financial-assistant service, etc) - just be careful to make sure the intentsâ€™ respective examples are distinct, so that the chatbot doesnâ€™t mix them up.</p>

<p>The <em>stories</em> in the <strong>stories.md</strong> file present the chatbot with sample conversation flows, teaching it how real-world conversations would go, and helping it predict the most approprite responses (Please see <a href="https://rasa.com/docs/rasa/core/stories/">Stories</a>).</p>

<p>The body/skelleton of the chatbot is the <em>domain</em> file - <strong>domain.yml</strong>. It assembles all the <em>intents</em> &amp; <em>entities</em> the chatbot should know, the <em>slots</em> and <em>forms</em> it should store, the <em>actions</em> it can take and the <em>templates</em> (things it can say). Please see <a href="https://rasa.com/docs/rasa/core/domains/">Domains</a>, <a href="https://rasa.com/docs/rasa/core/slots/">Slots</a> and <a href="https://rasa.com/docs/rasa/core/forms/">Forms</a>.</p>

<p>For adjustments to the <strong>endpoints.yml</strong>, <strong>config.yml</strong>, <strong>credentials.yml</strong>, <strong>actions.py</strong> and any other files, Iâ€™d recommend taking some time to go through the <a href="https://rasa.com/docs/rasa/">Rasa Docs</a>. Theyâ€™re really good, and well detailed. Itâ€™s the best way to find out exactly whatâ€™s happening behind the scenes, and discover how to mould the chatbot in line with how you envisioned it.</p>

<p><strong>Hint:</strong> some features <em>might</em> at times appear quite challenging to design and implement (custom actions are particularly notorious), but you <em>will</em> find plenty of help in online forums.</p>

<p>If youâ€™d like, you can download a sample chatbot I had made <a href="https://github.com/Tim-Abwao/rasa-chatbot">here</a>. It uses internet APIs to tell jokes and random number/date facts. Iâ€™ll re-edit this page in future to describe how to build it.</p>

<h3 id="modifying-the-chatbot">Modifying the Chatbot</h3>
<p>You can give the chatbot a unique personality by editing the files in the Rasa Project.</p>
:ET